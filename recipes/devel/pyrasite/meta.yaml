package:
  name: pyrasite
  version: "2.0"

source:
  fn: pyrasite-2.0.tar.gz
  url: https://pypi.python.org/packages/8e/d0/507f2bd9a6f9e9b475e0f62f04eeda72eeb920a79f2cc28a6a8c402e4550/pyrasite-2.0.tar.gz
  md5: 5491f5cc080538a7d2523ba9150ffff2
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - pyrasite = pyrasite:main
    #
    # Would create an entry point called pyrasite that calls pyrasite.main()

    - pyrasite=pyrasite.main:main
    - pyrasite-memory-viewer=pyrasite.tools.memory_viewer:main
    - pyrasite-shell=pyrasite.tools.shell:shell

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools

  run:
    - python
    - setuptools
    - urwid
    - meliae

test:
  # Python imports
  imports:
    - pyrasite
    - pyrasite.payloads
    - pyrasite.tests
    - pyrasite.tools

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - pyrasite --help
    #- pyrasite-memory-viewer --help
    #- pyrasite-shell --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  requires:
    # Put any additional test requirements here.  For example
    - nose

about:
  home: http://pyrasite.com
  license: GNU General Public License (GPL)
  summary: 'Inject code into a running Python process'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
